{"version":3,"sources":["components/CurrentWeather.jsx","components/Details.jsx","components/DailyWeather/MinTempTip.jsx","components/DailyWeather/MinTemp.jsx","components/DailyWeather/Tooltip.jsx","components/DailyWeather/Perception.jsx","components/DailyWeather/MaxTempTip.jsx","components/DailyWeather/MaxTemp.jsx","components/DailyWeather/WeatherTip.jsx","components/DailyWeather/Weather.jsx","components/DailyWeather/Day.jsx","components/DailyWeather/Table.jsx","components/DailyWeather/HourlyWeather.jsx","components/DailyWeather/DailyWeather.jsx","App.js","index.js"],"names":["Flex","styled","div","CurrTemp","TempVal","span","TempUnit","CurrentWeather","props","tick","e","res","Date","toDateString","timeZone","toLocaleTimeString","hour","minute","second","hour12","setState","time","tempdt","state","setIcon","name","weather","main","handleClick","prevState","search","handleSubmit","a","preventDefault","lat","lon","axios","method","url","params","q","input","key","then","data","results","geometry","lng","baseURL","exclude","units","appid","process","get","location","components","city","state_district","country","error","console","log","saveData","tempC","catch","err","handleChange","target","value","dt","this","coords","intervalID","setInterval","clearInterval","Fragment","style","textShadow","fontFamily","color","zIndex","width","padding","paddingLeft","display","flexDirection","justifyContent","height","fontWeight","fontSize","position","marginLeft","onClick","top","backgroundColor","border","borderRadius","className","boxShadow","bottom","right","alignItems","onSubmit","onChange","type","placeholder","marginBottom","marginRight","src","alt","description","toUpperCase","slice","Math","round","temps","temp","changeTemp","activeUnit","React","Component","DeatilsWrapper","Item","Details","current","borderBottom","flex","alignSelf","feels_like","humidity","visibility","uvi","clouds","wind_speed","tempUnit","wind_deg","sunrise","sunset","MinTempTip","MinTemp","td","Tooltip","Perception","MaxTempTip","MaxTemp","WeatherTip","Weather","Day","Table","table","Wrapper","HourlyWeather","hourly","map","index","Row","tr","SecondRow","Col1","DailyWeather","findDay","x","date","weekday","Array","getDay","findPop","toFixed","findDateString","toggleData","split","length","0","1","2","3","4","5","6","7","weatherDescription","element","join","minHeight","i","pop","max","min","paddingBottom","dew_point","rain","snow","background","morn","day","eve","night","pressure","VideoContainer","App","textContent","getPosition","latitude","longitude","locationDenied","setVideo","autoPlay","muted","loop","navigator","geolocation","getCurrentPosition","Object","keys","timezone","daily","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b0a9dee.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CurrTemp = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst TempVal = styled.span`\n  padding-right: 10px;\n`;\n\nconst TempUnit = styled.span`\n  cursor: pointer;\n`;\n\nclass CurrentWeather extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: \"\",\n            search: false,\n            input: \"\",\n            country: \"\",\n            time: \"\",\n            tempdt: this.props.weather.dt,\n        };\n    }\n\n    componentDidMount() {\n        try {\n            axios\n                .get(\n                    `https://api.opencagedata.com/geocode/v1/json?q=${this.props.coords[0]}+${this.props.coords[1]}&key=1c6911666853447eac0030866cf19765`\n                )\n                .then((res) => {\n                    this.setState({\n                        location:\n                            res.data.results[0].components.city ||\n                            res.data.results[0].components.state_district,\n                        country: res.data.results[0].components.country,\n                    });\n                });\n        } catch (error) {\n            console.log(error);\n        }\n\n        this.intervalID = setInterval(() => this.tick(this.state.tempdt), 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    tick = (e) => {\n        let res =\n            new Date(e * 1000).toDateString(\"en-US\", {\n                timeZone: this.props.timeZone,\n            }) +\n            \", \" +\n            new Date(e * 1000).toLocaleTimeString(\"en-US\", {\n                timeZone: this.props.timeZone,\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n                second: \"2-digit\",\n                hour12: true,\n            });\n        this.setState({\n            time: res,\n            tempdt: this.state.tempdt + 1,\n        });\n    };\n\n    setIcon = () => {\n        let name = this.props.weather.weather[0].main;\n        if (name === \"Thunderstorm\") {\n            return \"thunderstorm.png\";\n        } else if (name === \"Drizzle\") {\n            return \"drizzle.png\";\n        } else if (name === \"Rain\") {\n            return \"rain.png\";\n        } else if (name === \"Snow\") {\n            return \"snow.png\";\n        } else if (name === \"Clear\") {\n            return \"clear.png\";\n        } else if (name === \"Clouds\") {\n            return \"cloud.png\";\n        } else {\n            return \"haze.png\";\n        }\n    };\n\n    handleClick = (e) => {\n        this.setState((prevState) => {\n            return { search: !prevState.search };\n        });\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        let lat = \"\",\n            lon = \"\";\n        await axios({\n            method: \"GET\",\n            url: \"https://api.opencagedata.com/geocode/v1/json\",\n            params: { q: this.state.input, key: \"1c6911666853447eac0030866cf19765\" },\n        })\n            .then((res) => {\n                lat = res.data.results[0].geometry.lat;\n                lon = res.data.results[0].geometry.lng;\n                try {\n                    axios({\n                        method: \"GET\",\n                        baseURL: \"https://api.openweathermap.org/data/2.5\",\n                        url: \"/onecall\",\n                        params: {\n                            lat: lat,\n                            lon: lon,\n                            exclude: \"minutely\",\n                            units: \"metric\",\n                            appid: process.env.REACT_APP_MY_SECRET_KEY,\n                        },\n                    })\n                        .then((res) => {\n                            try {\n                                axios\n                                    .get(\n                                        `https://api.opencagedata.com/geocode/v1/json?q=${lat}+${lon}&key=1c6911666853447eac0030866cf19765`\n                                    )\n                                    .then((res) => {\n                                        this.setState({\n                                            location:\n                                                res.data.results[0].components.city ||\n                                                res.data.results[0].components.state_district,\n                                            country: res.data.results[0].components.country,\n                                        });\n                                    });\n                            } catch (error) {\n                                console.log(error);\n                            }\n                            return res;\n                        })\n                        .then((res) => {\n                            this.props.saveData(res.data, lat, lon);\n                        }, this.props.tempC());\n                } catch (error) {\n                    console.log(error);\n                }\n            })\n            .catch((err) => console.log(err));\n    };\n\n    handleChange = (e) => {\n        this.setState({ input: e.target.value });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div\n                    style={{\n                        textShadow: \"1px 1px 1px black\",\n                        fontFamily: \"sans-serif\",\n                        color: \"white\",\n                        zIndex: \"1\",\n                        width: \"50%\",\n                        padding: \"30px\",\n                        paddingLeft: \"100px\",\n                    }}\n                >\n                    <div\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"space-between\",\n                            height: \"390px\",\n                        }}\n                    >\n                        <div\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                justifyContent: \"space-between\",\n                                height: \"120px\",\n                            }}\n                        >\n                            <div\n                                style={{\n                                    fontWeight: \"bold\",\n                                    fontSize: \"4rem\",\n                                    position: \"relative\",\n                                }}\n                            >\n                                {this.state.location}\n                                <span style={{ marginLeft: \"15px\" }}>\n                                    <button\n                                        onClick={this.handleClick}\n                                        style={{\n                                            position: \"absolute\",\n                                            top: \"20px\",\n                                            fontSize: \"25px\",\n                                            backgroundColor: \"#4CAF50\",\n                                            color: \"white\",\n                                            border: \"none\",\n                                            padding: \"5px 10px\",\n                                            borderRadius: \"4px\",\n                                        }}\n                                    >\n                                        <i className=\"fas fa-search\"></i>\n                                    </button>\n                                    <span\n                                        style={{\n                                            boxShadow: \"0px 5px 10px 1px rgba(0,0,0,0.5)\",\n                                            borderRadius: \"4px\",\n                                            border: \"1px solid rgb(200,200,200)\",\n                                            backgroundColor: \"white\",\n                                            padding: \"20px\",\n                                            position: \"absolute\",\n                                            bottom: \"-70px\",\n                                            right: \"70px\",\n                                            display: this.state.search === true ? \"block\" : \"none\",\n                                        }}\n                                    >\n                                        <form\n                                            style={{ display: \"flex\", alignItems: \"center\" }}\n                                            onSubmit={this.handleSubmit}\n                                        >\n                                            <input\n                                                onChange={this.handleChange}\n                                                value={this.state.input}\n                                                type=\"text\"\n                                                placeholder=\"Enter city name\"\n                                            />\n                                        </form>\n                                    </span>\n                                </span>\n                            </div>\n                            <div style={{ fontSize: \"1.5rem\", marginBottom: \"1rem\" }}>\n                                {this.state.country}\n                            </div>\n                            <div style={{ fontSize: \"1.2rem\" }}>{this.state.time}</div>\n                        </div>\n                        <div\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                justifyContent: \"space-between\",\n                                height: \"180px\",\n                            }}\n                        >\n                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                <img\n                                    style={{ height: \"32px\", width: \"32px\", marginRight: \"15px\" }}\n                                    src={this.setIcon()}\n                                    alt=\"\"\n                                />\n                                <div style={{ fontSize: \"1.3rem\" }}>\n                                    {this.props.weather.weather[0].description[0].toUpperCase() +\n                                        this.props.weather.weather[0].description.slice(1)}\n                                </div>\n                            </div>\n                            <div style={{ color: \"white\", fontSize: \"1.2rem\" }}>\n                                <i style={{ color: \"#F44336\" }} className=\"fas fa-arrow-up\"></i>\n                                <span style={{ padding: \"0 15px\" }}>\n                                    {Math.round(this.props.temps[1])}&deg;\n                                </span>\n                                <i\n                                    style={{ color: \"#65a4f1\" }}\n                                    className=\"fas fa-arrow-down\"\n                                ></i>\n                                <span style={{ padding: \"0 15px\" }}>\n                                    {Math.round(this.props.temps[0])}&deg;\n                                </span>\n                            </div>\n                            <CurrTemp>\n                                <TempVal style={{ fontSize: \"5.5rem\", fontWeight: \"bold\" }}>\n                                    {Math.round(this.props.weather.temp)}&deg;\n                                </TempVal>\n                                <Flex>\n                                    <TempUnit\n                                        onClick={this.props.changeTemp}\n                                        style={\n                                            this.props.activeUnit === \"F\"\n                                                ? { fontSize: \"3rem\", fontWeight: \"bold\" }\n                                                : {\n                                                    fontSize: \"3rem\",\n                                                    fontWeight: \"bold\",\n                                                    color: \"grey\",\n                                                }\n                                        }\n                                    >\n                                        F\n                                    </TempUnit>\n                                    <TempUnit\n                                        onClick={this.props.changeTemp}\n                                        style={\n                                            this.props.activeUnit === \"C\"\n                                                ? { fontSize: \"3rem\", fontWeight: \"bold\" }\n                                                : {\n                                                    fontSize: \"3rem\",\n                                                    fontWeight: \"bold\",\n                                                    color: \"grey\",\n                                                }\n                                        }\n                                    >\n                                        C\n                                    </TempUnit>\n                                </Flex>\n                            </CurrTemp>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CurrentWeather;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst DeatilsWrapper = styled.div`\n  color: white;\n  width: 80%;\n  z-index: 1;\n  padding: 10px 20px 0px 20px;\n  background-color: rgba(0, 0, 0, 0.6);\n  height: max-content;\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Item = styled.div`\n  padding: 6px 0px;\n  border-bottom: 1px solid rgb(150, 150, 150);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 1rem;\n`;\n\nfunction setIcon(name) {\n    if (name === \"Thunderstorm\") {\n        return \"thunderstorm.png\";\n    } else if (name === \"Drizzle\") {\n        return \"drizzle.png\";\n    } else if (name === \"Rain\") {\n        return \"rain.png\";\n    } else if (name === \"Snow\") {\n        return \"snow.png\";\n    } else if (name === \"Clear\") {\n        return \"clear.png\";\n    } else if (name === \"Clouds\") {\n        return \"cloud.png\";\n    } else {\n        return \"haze.png\";\n    }\n}\n\nfunction Details(props) {\n    let name = props.current.weather[0].main;\n    return (\n        <div\n            style={{\n                fontWeight: \"500\",\n                fontSize: \"1.3rem\",\n                fontFamily: \"sans-serif\",\n                display: \"flex\",\n                width: \"40%\",\n                padding: \"50px 30px 30px 0px\",\n            }}\n        >\n            <DeatilsWrapper>\n                <div style={{ borderBottom: \"2px solid white\", padding: \"5px\" }}>\n                    Details\n                </div>\n                <div style={{ flex: \"1\", padding: \"10px 0px\", display: \"flex\" }}>\n                    <div\n                        style={{\n                            width: \"40%\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            display: \"flex\",\n                        }}\n                    >\n                        <img\n                            style={{ alignSelf: \"center\", width: \"120px\", height: \"120px\" }}\n                            src={setIcon(name)}\n                            alt=\"\"\n                        />\n                    </div>\n                    <div style={{ width: \"60%\" }}>\n                        <Item>\n                            <div>Feels like</div>\n                            <div>{props.current.feels_like}&deg;</div>\n                        </Item>\n                        <Item>\n                            <div>Humidity</div>\n                            <div>{props.current.humidity} %</div>\n                        </Item>\n                        <Item>\n                            <div>Visibility</div>\n                            <div>{props.current.visibility} m</div>\n                        </Item>\n                        <Item>\n                            <div>UV Index</div>\n                            <div>{props.current.uvi}</div>\n                        </Item>\n                        <Item>\n                            <div>Clouds</div>\n                            <div>{props.current.clouds} %</div>\n                        </Item>\n                        <Item>\n                            <div>Wind Speed</div>\n                            <div>\n                                {props.current.wind_speed}\n                                {props.tempUnit === 'C'?' m/sec':' mi/h'}\n                            </div>\n                        </Item>\n                        <Item>\n                            <div>Wind Direction</div>\n                            <div>{props.current.wind_deg}&deg;</div>\n                        </Item>\n                        <Item>\n                            <div>Sunrise</div>\n                            <div>\n                                {new Date(\n                                    props.current.sunrise * 1000\n                                ).toLocaleTimeString(\"en-US\", {\n                                    timeZone: props.timeZone,\n                                    hour: \"2-digit\",\n                                    minute: \"2-digit\",\n                                    hour12: true,\n                                })}\n                            </div>\n                        </Item>\n                        <Item style={{ borderBottom: \"none\" }}>\n                            <div>Sunset</div>\n                            <div>\n                                {new Date(\n                                    props.current.sunset * 1000\n                                ).toLocaleTimeString(\"en-US\", {\n                                    timeZone: props.timeZone,\n                                    hour: \"2-digit\",\n                                    minute: \"2-digit\",\n                                    hour12: true,\n                                })}\n                            </div>\n                        </Item>\n                    </div>\n                </div>\n            </DeatilsWrapper>\n        </div>\n    );\n}\n\nexport default Details;\n","import styled from \"styled-components\";\n\nexport const MinTempTip = styled.span`\n  visibility: hidden;\n  width: 80px;\n  background-color: white;\n  color: rgb(0, 100, 255);\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n  font-size: 15px;\n  position: absolute;\n  z-index: 1;\n  bottom: 100%;\n  left: 50%;\n  margin-left: -40px;\n`;\n","import styled from \"styled-components\";\nimport { MinTempTip } from \"./MinTempTip\";\nexport const MinTemp = styled.td`\n  padding: 10px;\n  color: #65a4f1;\n  border-bottom: 1px solid rgb(150, 150, 150);\n  text-align: center;\n  position: relative;\n  &:hover ${MinTempTip} {\n    visibility: visible;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Tooltip = styled.span`\n  visibility: hidden;\n  width: 100px;\n  background-color: white;\n  color: black;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n  font-size: 15px;\n  position: absolute;\n  z-index: 1;\n  bottom: 100%;\n  left: 50%;\n  margin-left: -40px;\n`;\n","import styled from \"styled-components\";\nimport { Tooltip } from \"./Tooltip\";\nexport const Perception = styled.td`\n  position: relative;\n  padding: 10px;\n  border-bottom: 1px solid rgb(150, 150, 150);\n  text-align: center;\n  &:hover ${Tooltip} {\n    visibility: visible;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const MaxTempTip = styled.span`\n  visibility: hidden;\n  width: 80px;\n  background-color: white;\n  color: rgb(255, 30, 0);\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n  font-size: 15px;\n  position: absolute;\n  z-index: 1;\n  bottom: 100%;\n  left: 50%;\n  margin-left: -40px;\n`;\n","import styled from \"styled-components\";\nimport { MaxTempTip } from \"./MaxTempTip\";\nexport const MaxTemp = styled.td`\n  padding: 10px;\n  position: relative;\n  color: #f44336;\n  border-bottom: 1px solid rgb(150, 150, 150);\n  text-align: center;\n  &:hover ${MaxTempTip} {\n    visibility: visible;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const WeatherTip = styled.span`\n  visibility: hidden;\n  width: 80px;\n  background-color: white;\n  color: rgb(0, 100, 255);\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n  font-size: 15px;\n  position: absolute;\n  z-index: 1;\n  bottom: 100%;\n  left: 50%;\n  margin-left: -40px;\n`;\n","import styled from \"styled-components\";\nimport { WeatherTip } from \"./WeatherTip\";\n\nexport const Weather = styled.td`\n  padding: 10px;\n  border-bottom: 1px solid #ddd;\n  align-items: center;\n  border-bottom: 1px solid rgb(150, 150, 150);\n  position: relative;\n  &:hover ${WeatherTip} {\n    visibility: visible;\n  }\n`;\n","import styled from \"styled-components\";\nexport const Day = styled.td`\n  padding: 10px;\n  border-bottom: 1px solid rgb(150, 150, 150);\n`;\n","import styled from \"styled-components\";\nexport const Table = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  overflow: auto;\n  padding: 25px 0px 20px 0px;\n`;\n\nfunction setIcon(name) {\n    if (name === \"Thunderstorm\") {\n        return \"thunderstorm.png\";\n    } else if (name === \"Drizzle\") {\n        return \"drizzle.png\";\n    } else if (name === \"Rain\") {\n        return \"rain.png\";\n    } else if (name === \"Snow\") {\n        return \"snow.png\";\n    } else if (name === \"Clear\") {\n        return \"clear.png\";\n    } else if (name === \"Clouds\") {\n        return \"cloud.png\";\n    } else {\n        return \"haze.png\";\n    }\n}\n\nfunction HourlyWeather(props) {\n    return (\n        <Wrapper>\n            {props.hourly.map((hour, index) => (\n                <div\n                    key={index}\n                    style={{\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        flexDirection: \"column\",\n                        display: \"flex\",\n                        fontSize: \"small\",\n                        padding: \"0 20px\",\n                    }}\n                >\n                    <div style={{ width: \"max-content\" }}>\n                        {new Date(hour.dt * 1000).toLocaleTimeString(\"en-US\", {\n                            timeZone: props.timeZone,\n                            hour: \"numeric\",\n                            hour12: true,\n                        })}\n                    </div>\n                    <img\n                        style={{ height: \"32px\", width: \"32px\" }}\n                        src={setIcon(hour.weather[0].main)}\n                        alt=\"\"\n                    />\n                    <div>{Math.round(hour.temp)}&deg;</div>\n                </div>\n            ))}\n        </Wrapper>\n    );\n}\n\nexport default HourlyWeather;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Component } from \"react\";\nimport { MinTemp } from \"./MinTemp\";\nimport { Perception } from \"./Perception\";\nimport { MaxTemp } from \"./MaxTemp\";\nimport { Weather } from \"./Weather\";\nimport { Day } from \"./Day\";\nimport { Table } from \"./Table\";\nimport { MinTempTip } from \"./MinTempTip\";\nimport { Tooltip } from \"./Tooltip\";\nimport { MaxTempTip } from \"./MaxTempTip\";\nimport HourlyWeather from \"./HourlyWeather\";\nimport { WeatherTip } from \"./WeatherTip\";\n\nconst Row = styled.tr`\n  &:hover {\n    background-color: #303030;\n  }\n`;\n\nconst SecondRow = styled.tr`\n  background-color: white;\n  color: black;\n  font-size: 15px;\n`;\n\nconst Col1 = styled.td`\n  padding: 10px;\n  border-bottom: 1px solid rgb(150, 150, 150);\n`;\n\nexport default class DailyWeather extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            0: false,\n            1: false,\n            2: false,\n            3: false,\n            4: false,\n            5: false,\n            6: false,\n            7: false,\n        };\n    }\n\n    findDay = (x) => {\n        let date = new Date(x * 1000);\n\n        let weekday = new Array(7);\n        weekday[0] = \"Sunday\";\n        weekday[1] = \"Monday\";\n        weekday[2] = \"Tuesday\";\n        weekday[3] = \"Wednesday\";\n        weekday[4] = \"Thursday\";\n        weekday[5] = \"Friday\";\n        weekday[6] = \"Saturday\";\n\n        let n = weekday[date.getDay()];\n        return n;\n    };\n\n    findPop = (e) => {\n        return e.toFixed(0) + \"%\";\n    };\n\n    findDateString = (e) => {\n        let date = new Date(e * 1000).toDateString({\n            timeZone: this.props.timeZone,\n        });\n        return date;\n    };\n\n    toggleData = (e) => {\n        let temp = e.target.className.split(\" \");\n        temp = temp[temp.length - 1];\n        if (temp === \"1\") {\n            this.setState({\n                0: !this.state[0],\n                1: false,\n                2: false,\n                3: false,\n                4: false,\n                5: false,\n                6: false,\n                7: false,\n            });\n        } else if (temp === \"2\") {\n            this.setState({\n                1: !this.state[1],\n                0: false,\n                2: false,\n                3: false,\n                4: false,\n                5: false,\n                6: false,\n                7: false,\n            });\n        } else if (temp === \"3\") {\n            this.setState({\n                2: !this.state[2],\n                1: false,\n                0: false,\n                3: false,\n                4: false,\n                5: false,\n                6: false,\n                7: false,\n            });\n        } else if (temp === \"4\") {\n            this.setState({\n                3: !this.state[3],\n                1: false,\n                0: false,\n                2: false,\n                4: false,\n                5: false,\n                6: false,\n                7: false,\n            });\n        } else if (temp === \"5\") {\n            this.setState({\n                4: !this.state[4],\n                1: false,\n                0: false,\n                3: false,\n                2: false,\n                5: false,\n                6: false,\n                7: false,\n            });\n        } else if (temp === \"6\") {\n            this.setState({\n                5: !this.state[5],\n                1: false,\n                0: false,\n                3: false,\n                4: false,\n                2: false,\n                6: false,\n                7: false,\n            });\n        } else if (temp === \"7\") {\n            this.setState({\n                6: !this.state[6],\n                1: false,\n                0: false,\n                3: false,\n                4: false,\n                5: false,\n                2: false,\n                7: false,\n            });\n        } else if (temp === \"8\") {\n            this.setState({\n                7: !this.state[7],\n                1: false,\n                0: false,\n                3: false,\n                4: false,\n                5: false,\n                6: false,\n                2: false,\n            });\n        }\n    };\n\n    setIcon = (name) => {\n        if (name === \"Thunderstorm\") {\n            return \"thunderstorm.png\";\n        } else if (name === \"Drizzle\") {\n            return \"drizzle.png\";\n        } else if (name === \"Rain\") {\n            return \"rain.png\";\n        } else if (name === \"Snow\") {\n            return \"snow.png\";\n        } else if (name === \"Clear\") {\n            return \"clear.png\";\n        } else if (name === \"Clouds\") {\n            return \"cloud.png\";\n        } else {\n            return \"haze.png\";\n        }\n    };\n\n    weatherDescription = (e) => {\n        let element = e.split(\"\");\n        let temp = element[0].toUpperCase();\n        element[0] = temp;\n        return element.join(\"\");\n    };\n\n    render() {\n        const { data, hourly, tempUnit } = this.props;\n\n        return (\n            <div\n                style={{\n                    fontFamily: \"sans-serif\",\n                    fontSize: \"1.2rem\",\n                    color: \"white\",\n                    position: \"relative\",\n                    minHeight: \"800px\",\n                }}\n            >\n                <div\n                    style={{\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        display: \"flex\",\n                        padding: \"10px 20px 0px 20px\",\n                        backgroundColor: \"rgba(0,0,0,0.6)\",\n                        borderRadius: \"4px\",\n                        position: \"absolute\",\n                        right: \"200px\",\n                        width: \"900px\",\n                    }}\n                >\n                    <div\n                        style={{\n                            borderBottom: \"2px solid white\",\n                            padding: \"5px\",\n                            width: \"100%\",\n                        }}\n                    >\n                        Forecast\n                    </div>\n                    <HourlyWeather timeZone={this.props.timeZone} hourly={hourly} />\n                    <Table>\n                        <tbody style={{ padding: \"20px\" }}>\n                            {data.map((e, i) => (\n                                <React.Fragment key={e.dt}>\n                                    <Row onClick={this.toggleData}>\n                                        <Day className={i + 1}>{this.findDay(e.dt)}</Day>\n\n                                        <Weather className={i + 1}>\n                                            <img\n                                                style={{ height: \"32px\", width: \"32px\" }}\n                                                src={this.setIcon(e.weather[0].main)}\n                                                alt=\"\"\n                                            />\n                                            <WeatherTip>{e.weather[0].main}</WeatherTip>\n                                        </Weather>\n\n                                        <Perception className={i + 1}>\n                                            {this.findPop(e.pop * 100)}\n                                            <Tooltip>Precipitation</Tooltip>\n                                        </Perception>\n\n                                        <MaxTemp className={i + 1}>\n                                            {Math.round(e.temp.max)}&deg;\n                                            <MaxTempTip>Max. Temp</MaxTempTip>\n                                        </MaxTemp>\n\n                                        <MinTemp className={i + 1}>\n                                            {Math.round(e.temp.min)}&deg;\n                                            <MinTempTip>Min. Temp</MinTempTip>\n                                        </MinTemp>\n                                    </Row>\n                                    {this.state[i] && (\n                                        <SecondRow>\n                                            <Col1>\n                                                <b>{this.findDateString(e.dt)}</b>\n                                            </Col1>\n                                            <td style={{ padding: \"10px\" }}>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Weather:</b>{\" \"}\n                                                    {this.weatherDescription(e.weather[0].description)}\n                                                </div>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Cloud:</b> {`${e.clouds}%`}\n                                                </div>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Dew-point:</b> {`${e.dew_point}`}&deg;\n                                                </div>\n                                                {e.rain && (\n                                                    <div style={{ paddingBottom: \"10px\" }}>\n                                                        <b>Rain:</b> {`${e.rain}mm`}\n                                                    </div>\n                                                )}\n                                                {e.snow && (\n                                                    <div style={{ paddingBottom: \"10px\" }}>\n                                                        <b>Snow:</b> {`${e.snow}mm`}\n                                                    </div>\n                                                )}\n                                                <div>\n                                                    <b>Humidity:</b> {`${e.humidity}%`}\n                                                </div>\n                                            </td>\n                                            <td style={{ padding: \"10px\", background: \"yellow\" }}>\n                                                <div style={{ color: \"red\", paddingBottom: \"5px\" }}>\n                                                    <u>Actual Temp</u>\n                                                </div>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Morning:</b> {e.temp.morn}&deg;\n                                                </div>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Day:</b> {e.temp.day}&deg;\n                                                </div>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Evening:</b> {e.temp.eve}&deg;\n                                                </div>\n                                                <div>\n                                                    <b>Night:</b> {e.temp.night}&deg;\n                                                </div>\n                                            </td>\n                                            <td style={{ padding: \"10px\", background: \"yellow\" }}>\n                                                <div style={{ color: \"red\", paddingBottom: \"5px\" }}>\n                                                    <u>Feels like</u>\n                                                </div>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Morning:</b> {e.feels_like.morn}&deg;\n                                                </div>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Day:</b> {e.feels_like.day}&deg;\n                                                </div>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Evening:</b> {e.feels_like.eve}&deg;\n                                                </div>\n                                                <div>\n                                                    <b>Night:</b> {e.feels_like.night}&deg;\n                                                </div>\n                                            </td>\n                                            <td style={{ padding: \"10px\" }}>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Sun Rise:</b>{\" \"}\n                                                    {new Date(\n                                                        e.sunrise * 1000\n                                                    ).toLocaleTimeString(\"en-US\", {\n                                                        timeZone: this.props.timeZone,\n                                                        hour: \"2-digit\",\n                                                        minute: \"2-digit\",\n                                                        hour12: true,\n                                                    })}\n                                                </div>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Sun Set:</b>{\" \"}\n                                                    {new Date(e.sunset * 1000).toLocaleTimeString(\n                                                        \"en-US\",\n                                                        {\n                                                            timeZone: this.props.timeZone,\n                                                            hour: \"2-digit\",\n                                                            minute: \"2-digit\",\n                                                            hour12: true,\n                                                        }\n                                                    )}\n                                                </div>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>UV Index:</b> {e.uvi}\n                                                </div>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Pressure:</b> {e.pressure} hPa\n                                                </div>\n                                                <div style={{ paddingBottom: \"10px\" }}>\n                                                    <b>Wind Directon:</b> {e.wind_deg}&deg;\n                                                </div>\n                                                <div>\n                                                    <b>Wind Speed:</b> {e.wind_speed}\n                                                    {tempUnit === 'C'?' metre/sec':' miles/hour'}\n                                                </div>\n                                            </td>\n                                        </SecondRow>\n                                    )}\n                                </React.Fragment>\n                            ))}\n                        </tbody>\n                    </Table>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport CurrentWeather from \"./components/CurrentWeather\";\n// import data from './data/data.json'\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport Details from \"./components/Details\";\nimport DailyWeather from \"./components/DailyWeather/DailyWeather\";\n\nconst VideoContainer = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: auto;\n  overflow: hidden;\n  video {\n    min-width: 100%;\n    min-height: 100%;\n    width: auto;\n    height: max-content;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nclass App extends React.Component {\n  //console.log(process.env.REACT_APP_MY_SECRET_KEY)\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      lat: \"\",\n      lon: \"\",\n      tempUnit: \"C\",\n    };\n  }\n\n  changeTemp = async (e) => {\n    if (e.target.textContent !== this.state.tempUnit) {\n      if (e.target.textContent === \"C\") {\n        try {\n          await axios({\n            method: \"GET\",\n            baseURL: \"https://api.openweathermap.org/data/2.5\",\n            url: \"/onecall\",\n            params: {\n              lat: this.state.lat,\n              lon: this.state.lon,\n              exclude: \"minutely\",\n              units: \"metric\",\n              appid: process.env.REACT_APP_MY_SECRET_KEY,\n            },\n          }).then((res) =>\n            this.setState({\n              data: res.data,\n              tempUnit: \"C\",\n            })\n          );\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        try {\n          axios({\n            method: \"GET\",\n            baseURL: \"https://api.openweathermap.org/data/2.5\",\n            url: \"/onecall\",\n            params: {\n              lat: this.state.lat,\n              lon: this.state.lon,\n              exclude: \"minutely\",\n              units: \"imperial\",\n              appid: process.env.REACT_APP_MY_SECRET_KEY,\n            },\n          }).then((res) =>\n            this.setState({\n              data: res.data,\n              tempUnit: \"F\",\n            })\n          );\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  };\n\n  saveData = (data, lat, lon) => {\n    this.setState({ data: data, lat: lat, lon: lon });\n  };\n\n  getPosition = (position) => {\n    //get weather data from api\n    try {\n      axios({\n        method: \"GET\",\n        baseURL: \"https://api.openweathermap.org/data/2.5\",\n        url: \"/onecall\",\n        params: {\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n          exclude: \"minutely\",\n          units: \"metric\",\n          appid: process.env.REACT_APP_MY_SECRET_KEY,\n        },\n      }).then((res) =>\n        this.setState({\n          data: res.data,\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        })\n      );\n    } catch (error) {\n      console.log(error);\n    }\n    //temporarily using saved data to avoid extra api calls\n    // this.setState({data: data, lat: position.coords.latitude, lon: position.coords.longitude})\n  };\n\n  locationDenied = () => {\n    let position = { coords: { latitude: 12.9719, longitude: 77.5937 } };\n    this.getPosition(position);\n  };\n\n  componentDidMount() {\n    //Ask for location permission\n    //If location access denied show alert to say access required\n    navigator.geolocation &&\n      navigator.geolocation.getCurrentPosition(\n        this.getPosition,\n        this.locationDenied\n      );\n  }\n\n  setVideo = (name) => {\n    if (name === \"Thunderstorm\") {\n      return (\n        <video autoPlay muted loop>\n          <source src=\"thunderstorm.mp4\" type=\"video/mp4\" />\n        </video>\n      );\n    } else if (name === \"Drizzle\") {\n      return (\n        <video key={name} autoPlay muted loop>\n          <source src=\"drizzle.mp4\" type=\"video/mp4\" />\n        </video>\n      );\n    } else if (name === \"Rain\") {\n      return (\n        <video key={name} autoPlay muted loop>\n          <source src=\"rain.mp4\" type=\"video/mp4\" />\n        </video>\n      );\n    } else if (name === \"Snow\") {\n      return (\n        <video key={name} autoPlay muted loop>\n          <source src=\"snow.mp4\" type=\"video/mp4\" />\n        </video>\n      );\n    } else if (name === \"Clear\") {\n      return (\n        <video key={name} autoPlay muted loop>\n          <source src=\"clear.mp4\" type=\"video/mp4\" />\n        </video>\n      );\n    } else if (name === \"Clouds\") {\n      return (\n        <video key={name} autoPlay muted loop>\n          <source src=\"clouds.mp4\" type=\"video/mp4\" />\n        </video>\n      );\n    } else {\n      return (\n        <video key={name} autoPlay muted loop>\n          <source src=\"atmosphere.mp4\" type=\"video/mp4\" />\n        </video>\n      );\n    }\n  };\n\n  render() {\n    // console.log(this.state.tempUnit,'app')\n    if (Object.keys(this.state.data).length === 0) {\n      return (\n        <div\n          style={{\n            width: \"100vw\",\n            height: \"100vh\",\n            backgroundColor: \"#311B92\",\n          }}\n        ></div>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <VideoContainer>\n            {this.setVideo(this.state.data.current.weather[0].main)}\n          </VideoContainer>\n          <div style={{ justifyContent: \"center\", display: \"flex\" }}>\n            <CurrentWeather\n              tempC={() => {\n                this.setState({ tempUnit: \"C\" });\n              }}\n              activeUnit={this.state.tempUnit}\n              changeTemp={this.changeTemp}\n              timeZone={this.state.data.timezone}\n              coords={[this.state.lat, this.state.lon]}\n              saveData={this.saveData}\n              weather={this.state.data.current}\n              temps={[\n                this.state.data.daily[0].temp.min,\n                this.state.data.daily[0].temp.max,\n              ]}\n            />\n            <Details\n              tempUnit={this.state.tempUnit}\n              timeZone={this.state.data.timezone}\n              current={this.state.data.current}\n            />\n          </div>\n          <DailyWeather\n            tempUnit={this.state.tempUnit}\n            timeZone={this.state.data.timezone}\n            hourly={this.state.data.hourly}\n            data={this.state.data.daily}\n          />\n        </React.Fragment>\n      );\n    }\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}